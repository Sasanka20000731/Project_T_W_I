//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Printer_And_Ticket_Management_System.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ProjectDBEntities : DbContext
    {
        public ProjectDBEntities()
            : base("name=ProjectDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Table_AuditTrail> Table_AuditTrail { get; set; }
        public virtual DbSet<Table_Branch> Table_Branch { get; set; }
        public virtual DbSet<Table_Printer> Table_Printer { get; set; }
        public virtual DbSet<Table_PrinterAllocation> Table_PrinterAllocation { get; set; }
        public virtual DbSet<Table_Ticket> Table_Ticket { get; set; }
        public virtual DbSet<Table_UserDetail> Table_UserDetail { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<SP_GenerateAllocationListReport_Result> SP_GenerateAllocationListReport(Nullable<System.DateTime> p_FromDate, Nullable<System.DateTime> p_ToDate)
        {
            var p_FromDateParameter = p_FromDate.HasValue ?
                new ObjectParameter("p_FromDate", p_FromDate) :
                new ObjectParameter("p_FromDate", typeof(System.DateTime));
    
            var p_ToDateParameter = p_ToDate.HasValue ?
                new ObjectParameter("p_ToDate", p_ToDate) :
                new ObjectParameter("p_ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GenerateAllocationListReport_Result>("SP_GenerateAllocationListReport", p_FromDateParameter, p_ToDateParameter);
        }
    
        public virtual ObjectResult<SP_GenerateAuditTrailRpt_Result> SP_GenerateAuditTrailRpt(Nullable<int> p_ReportType, Nullable<System.DateTime> p_FromDate, Nullable<System.DateTime> p_ToDate)
        {
            var p_ReportTypeParameter = p_ReportType.HasValue ?
                new ObjectParameter("p_ReportType", p_ReportType) :
                new ObjectParameter("p_ReportType", typeof(int));
    
            var p_FromDateParameter = p_FromDate.HasValue ?
                new ObjectParameter("p_FromDate", p_FromDate) :
                new ObjectParameter("p_FromDate", typeof(System.DateTime));
    
            var p_ToDateParameter = p_ToDate.HasValue ?
                new ObjectParameter("p_ToDate", p_ToDate) :
                new ObjectParameter("p_ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GenerateAuditTrailRpt_Result>("SP_GenerateAuditTrailRpt", p_ReportTypeParameter, p_FromDateParameter, p_ToDateParameter);
        }
    
        public virtual ObjectResult<SP_GenerateBranchListReport_Result> SP_GenerateBranchListReport(Nullable<System.DateTime> p_FromDate, Nullable<System.DateTime> p_ToDate)
        {
            var p_FromDateParameter = p_FromDate.HasValue ?
                new ObjectParameter("p_FromDate", p_FromDate) :
                new ObjectParameter("p_FromDate", typeof(System.DateTime));
    
            var p_ToDateParameter = p_ToDate.HasValue ?
                new ObjectParameter("p_ToDate", p_ToDate) :
                new ObjectParameter("p_ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GenerateBranchListReport_Result>("SP_GenerateBranchListReport", p_FromDateParameter, p_ToDateParameter);
        }
    
        public virtual ObjectResult<SP_GeneratePrinterListReport_Result> SP_GeneratePrinterListReport(Nullable<System.DateTime> p_FromDate, Nullable<System.DateTime> p_ToDate)
        {
            var p_FromDateParameter = p_FromDate.HasValue ?
                new ObjectParameter("p_FromDate", p_FromDate) :
                new ObjectParameter("p_FromDate", typeof(System.DateTime));
    
            var p_ToDateParameter = p_ToDate.HasValue ?
                new ObjectParameter("p_ToDate", p_ToDate) :
                new ObjectParameter("p_ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GeneratePrinterListReport_Result>("SP_GeneratePrinterListReport", p_FromDateParameter, p_ToDateParameter);
        }
    
        public virtual ObjectResult<SP_GenerateTicketsReport_Result> SP_GenerateTicketsReport(Nullable<System.DateTime> p_FromDate, Nullable<System.DateTime> p_ToDate)
        {
            var p_FromDateParameter = p_FromDate.HasValue ?
                new ObjectParameter("p_FromDate", p_FromDate) :
                new ObjectParameter("p_FromDate", typeof(System.DateTime));
    
            var p_ToDateParameter = p_ToDate.HasValue ?
                new ObjectParameter("p_ToDate", p_ToDate) :
                new ObjectParameter("p_ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GenerateTicketsReport_Result>("SP_GenerateTicketsReport", p_FromDateParameter, p_ToDateParameter);
        }
    
        public virtual ObjectResult<SP_GenerateUserManagementReport_Result> SP_GenerateUserManagementReport(Nullable<System.DateTime> p_FromDate, Nullable<System.DateTime> p_ToDate)
        {
            var p_FromDateParameter = p_FromDate.HasValue ?
                new ObjectParameter("p_FromDate", p_FromDate) :
                new ObjectParameter("p_FromDate", typeof(System.DateTime));
    
            var p_ToDateParameter = p_ToDate.HasValue ?
                new ObjectParameter("p_ToDate", p_ToDate) :
                new ObjectParameter("p_ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GenerateUserManagementReport_Result>("SP_GenerateUserManagementReport", p_FromDateParameter, p_ToDateParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int SP_InsertDataToTableAuditTrail(string functioonCase, string reasonCase, Nullable<System.DateTime> actDate)
        {
            var functioonCaseParameter = functioonCase != null ?
                new ObjectParameter("FunctioonCase", functioonCase) :
                new ObjectParameter("FunctioonCase", typeof(string));
    
            var reasonCaseParameter = reasonCase != null ?
                new ObjectParameter("ReasonCase", reasonCase) :
                new ObjectParameter("ReasonCase", typeof(string));
    
            var actDateParameter = actDate.HasValue ?
                new ObjectParameter("ActDate", actDate) :
                new ObjectParameter("ActDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_InsertDataToTableAuditTrail", functioonCaseParameter, reasonCaseParameter, actDateParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }

        public System.Data.Entity.DbSet<Printer_And_Ticket_Management_System.Models.User> Users { get; set; }
    }
}
